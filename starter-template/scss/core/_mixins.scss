@mixin respond-to($size, $dir) {
    @if ($size == retina) {
        @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {
            @content;
        }
    } @else if ($size and $dir) {
        @media screen and (#{$dir}-width: ($size + px)) {
            @content;
        }
    }
}

@mixin vertical-align($block: inline-block, $align: middle) {
    display: $block;
    vertical-align: $align;
}

// Uses assets sass map and creates sprite images from them. Can be passed original size and retina size image. Has option to use positioning for icon.
// @group spriting
// @author Devbridge Front-End team
// @example scss - Clamp function
// get-sprite($icn-check, $icn-check-retina);
// @param $sprite [true] - sass map variable generated by grunt for 1x sprite generation
// @param $sprite2x [false] - sass map variable generated by grunt for 2x sprite generation, if False or not passed - sprite will be not generated
// @param $center [false] - applies absolute positioning and centers icon vertically and horizontally
// @param $center-y [false] - applies absolute positioning and centers icon vertically
// @param $center-x [false] - applies absolute positioning and centers icon horizontally
@mixin get-sprite($sprite, $sprite2x: false, $center: false, $center-y: false, $center-x: false) {
    $sprite-half-sprite: 50%;
    $sprite-icn-height: nth($sprite, 6);
    $sprite-icn-width: nth($sprite, 5);
    background: url(nth($sprite, 9)) nth($sprite, 3) nth($sprite, 4) no-repeat;
    @include sprite-width($sprite);
    @include sprite-height($sprite);
    @if $sprite2x {
        @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2.0) {
            background: url(nth($sprite2x, 9)) nth($sprite2x, 3)/2 nth($sprite2x, 4)/2 no-repeat;
            background-size: nth($sprite2x, 7)/2 nth($sprite2x, 8)/2;
            @content;
        }
    }
    @if $center {
        position: absolute;
        top: $sprite-half-sprite;
        left: $sprite-half-sprite;
        margin: {
            top: -($sprite-icn-height / 2);
            left: -($sprite-icn-width / 2);
        }
    } @else if $center-y {
        position: absolute;
        top: $sprite-half-sprite;
        margin: {
            top: -($sprite-icn-height / 2);
        }
    } @else if $center-x {
        position: absolute;
        left: $sprite-half-sprite;
        margin: {
            left: -($sprite-icn-width / 2);
        }
    }
    @content;
}

@mixin sprite-background-size($sprite) {
    background-size: nth($sprite, 7) nth($sprite, 8);
}


