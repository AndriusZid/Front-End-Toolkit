.clearfix:after {
  clear: both;
  content: '';
  display: table;
  height: 0; }

/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
.modal-on body {
  overflow: hidden; }
@media screen and (max-width: 1024px) {
  .modal-on {
    overflow: hidden; }
    .modal-on body {
      left: 0;
      position: fixed;
      top: 0; } }

.modal-context {
  background-color: rgba(211, 211, 211, 0.8);
  height: 100%;
  left: 0;
  -webkit-overflow-scrolling: touch;
  overflow-y: scroll;
  position: fixed;
  top: 0;
  width: 100%;
  z-index: 500; }

.modal-container {
  margin: 0 auto;
  max-width: 100%;
  padding: 20px 0;
  position: relative;
  width: 1160px; }
  @media screen and (max-width: 1200px) {
    .modal-container {
      margin: 0 20px;
      width: auto; } }

.modal-title {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  background: #fff;
  font-weight: 700;
  padding: 20px; }

.modal-content {
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  background: #fff;
  padding: 20px; }

.modal-close {
  background: none;
  border: 0;
  color: #333;
  cursor: pointer;
  height: 30px;
  position: absolute;
  right: 0;
  text-align: center;
  top: 20px;
  width: 30px; }
  .modal-close:after {
    content: '\00d7';
    display: inline-block;
    font-family: 'helvetica', sans-serif;
    font-size: 30px;
    font-weight: 400;
    height: 30px;
    line-height: 30px;
    position: absolute;
    right: 0;
    top: 0;
    width: 30px; }
  .modal-close:hover {
    color: #000; }

.icn-arrow {
  display: block;
  background: url('images/icons.png?=1424167789332') 0px 0px no-repeat;
  width: 29px;
  height: 67px; }
  @media only screen and (min-resolution: 2dppx), (-webkit-min-device-pixel-ratio: 2) {
    .icn-arrow {
      background: url('images/icons@2x.png?=1424167789332') 0px 0px no-repeat;
      background-size: 58px 67px; } }

/*# sourceMappingURL=site-styles.css.map */